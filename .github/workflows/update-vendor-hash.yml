name: Update Nix Vendor Hash

on:
  push:
    paths:
      - 'go.mod'
      - 'go.sum'
    branches:
      - main
  pull_request:
    paths:
      - 'go.mod'
      - 'go.sum'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-vendor-hash:
    name: Update vendorHash in flake.nix
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ github.head_ref || github.ref }}
    
    - name: Install Nix
      uses: cachix/install-nix-action@v31
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
    
    - name: Update vendor hash
      id: update-hash
      run: |
        # First, set vendorHash to empty string to force error with correct hash
        sed -i 's/vendorHash = ".*"/vendorHash = ""/' flake.nix
        
        # Try to build, which will fail but give us the correct hash
        echo "Getting correct vendor hash..."
        if ! nix build 2>&1 | tee build.log; then
          # Extract the correct hash from the error message
          CORRECT_HASH=$(grep -oE 'got:[[:space:]]+sha256-[a-zA-Z0-9+/]+' build.log | sed 's/got:[[:space:]]*//;s/^[[:space:]]*//')
          
          if [ -z "$CORRECT_HASH" ]; then
            echo "Failed to extract vendor hash"
            exit 1
          fi
          
          echo "Found correct hash: $CORRECT_HASH"
          
          # Update flake.nix with the correct hash
          sed -i "s/vendorHash = \"\"/vendorHash = \"$CORRECT_HASH\"/" flake.nix
          
          # Verify the build now works
          echo "Verifying build with new hash..."
          nix build
          
          echo "vendor_hash=$CORRECT_HASH" >> $GITHUB_OUTPUT
        else
          echo "Build succeeded without hash update"
          echo "vendor_hash=unchanged" >> $GITHUB_OUTPUT
        fi
    
    - name: Check if changes exist
      id: changes
      run: |
        if git diff --exit-code flake.nix; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
          git diff flake.nix
        fi
    
    - name: Commit changes (PR context)
      if: steps.changes.outputs.changed == 'true' && github.event_name == 'pull_request'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add flake.nix
        git commit -m "fix: Update vendorHash for Nix build"
        git push
    
    - name: Commit changes (Push context)
      if: steps.changes.outputs.changed == 'true' && github.event_name == 'push'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add flake.nix
        git commit -m "fix: Update vendorHash for Nix build"
        git push